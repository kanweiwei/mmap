# This is a basic workflow to help you get started with Actions

name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
    tags:
      - '*'

env:
  FORCE_COLOR: 1
concurrency:
  group: ${{ github.run_id }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        host:
          - x64
        target:
          - x64
        node:
          - 16
        include:
          - os: windows-latest
            node: 16
            host: x86
            target: x86
    name: ${{ matrix.os }} (node=${{ matrix.node }}, host=${{ matrix.host }}, target=${{ matrix.target }})
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          architecture: ${{ matrix.host }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        if: contains(matrix.os, 'windows')
        with:
          msbuild-architecture: ${{ matrix.target }}

      - name: Python Version
        run: python3 --version

      - name: Install dependencies
        run: yarn install --ignore-scripts

      - name: Add env vars
        shell: bash
        run: |
          echo "V=1" >> $GITHUB_ENV
          if [ "${{ matrix.target }}" = "x86" ]; then
            echo "TARGET=ia32" >> $GITHUB_ENV
          else
            echo "TARGET=${{ matrix.target }}" >> $GITHUB_ENV
          fi

      - name: Configure build
        run: yarn node-pre-gyp configure --target_arch=${{ env.TARGET }}

      - name: Build binaries
        run: yarn node-pre-gyp build --target_arch=${{ env.TARGET }}

      - name: Package prebuilt binaries
        run: yarn node-pre-gyp package --target_arch=${{ env.TARGET }}

      - name: Upload binaries to commit artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prebuilt-binaries
          path: build/stage/*/*
          retention-days: 7

      - name: Upload binaries to GitHub Release
        run: yarn install --ignore-scripts && yarn node-pre-gyp-github publish
        if: startsWith(github.ref, 'refs/tags/')
        env:
          NODE_PRE_GYP_GITHUB_TOKEN: ${{ github.token }}
  build-qemu:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    strategy:
      fail-fast: false
      matrix:
        node:
          - 16
        target:
          - linux/arm64
        variant:
          - bullseye
          - alpine
        include:
          # musl x64 builds
          - target: linux/amd64
            variant: alpine
            node: 16
    name: ${{ matrix.variant }} (node=${{ matrix.node }}, target=${{ matrix.target }})
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build binaries and test
        run: |
          docker buildx build \
            --file ./tools/BinaryBuilder.Dockerfile \
            --load \
            --tag file-lock-builder \
            --platform ${{ matrix.target }} \
            --no-cache \
            --build-arg VARIANT=${{ matrix.variant }} \
            --build-arg NODE_VERSION=${{ matrix.node }} \
            .
          CONTAINER_ID=$(docker create -it file-lock-builder)
          docker cp $CONTAINER_ID:/usr/src/build/build/ ./build
      - name: Upload binaries to commit artifacts
        uses: actions/upload-artifact@v3
        if: matrix.node == 16
        with:
          name: prebuilt-binaries
          path: build/stage/*/*
          retention-days: 7

      - name: Upload binaries to GitHub Release
        run: yarn install --ignore-scripts && yarn node-pre-gyp-github publish
        if: matrix.node == 16 && startsWith(github.ref, 'refs/tags/')
        env:
          NODE_PRE_GYP_GITHUB_TOKEN: ${{ github.token }}

      - name: Npm Publish
        if: matrix.node == 16 && startsWith(github.ref, 'refs/tags/')
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: public
